name: MSBuild

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

jobs:
  build:
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        build_conf: [Release, Debug]

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Set environment variables
      shell: cmd
      run: |
        echo WXWIN=%GITHUB_WORKSPACE%\wxWidgets>> %GITHUB_ENV%
        echo PGDIR=%GITHUB_WORKSPACE%\postgres-binaries\pgsql>> %GITHUB_ENV%

    - name: Download and unpack wxWidgets headers
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://github.com/wxWidgets/wxWidgets/releases/download/v3.0.5/wxWidgets-3.0.5-headers.7z" -OutFile wxWidgets-headers.7z
        7z.exe x wxWidgets-headers.7z -o${{env.WXWIN}}

    - name: Download and unpack wxWidgets developer files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://github.com/wxWidgets/wxWidgets/releases/download/v3.0.5/wxMSW-3.0.5_vc142_Dev.7z" -OutFile wxWidgets-devel.7z
        7z.exe x wxWidgets-devel.7z -o${{env.WXWIN}}

    - name: Download and unpack PostgreSQL
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://get.enterprisedb.com/postgresql/postgresql-9.2.24-1-windows-binaries.zip?ls=Crossover&type=Crossover" -OutFile postgres-binaries.zip
        7z.exe x postgres-binaries.zip -o${{env.PGDIR}}\..

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.build_conf}} ${{env.SOLUTION_FILE_PATH}}
